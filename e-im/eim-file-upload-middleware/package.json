{
  "name": "jquery-file-upload-middleware",
  "author": {
    "name": "Aleksandr Guidrevitch",
    "email": "aguidrevitch@gmail.com"
  },
  "description": "jQuery-File-Upload Express.js Middleware",
  "keywords": [
    "jquery",
    "upload",
    "express",
    "middleware"
  ],
  "version": "0.0.9",
  "dependencies": {
    "formidable": ">=1.0.11",
    "imagemagick": ">=0.1.2",
    "lodash": ">= 0.9.2",
    "mkdirp": ">= 0.3.4"
  },
  "engines": {
    "node": ">= 0.8.8"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/aguidrevitch/jquery-file-upload-middleware.git"
  },
  "main": "./index.js",
  "readmeFilename": "README.md",
  "devDependencies": {},
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "_id": "jquery-file-upload-middleware@0.0.9",
  "license": "MIT",
  "readme": "jquery-file-upload-middleware\r\n=============================\r\n\r\n### Personal Patch Repository\r\n\r\nPlease comeback [Aleksandr Guidrevitch](http://aguidrevitch.blogspot.com/) lol\r\n\r\n- use bower to install jquery-file-upload (planed)\r\n- use not npm to install jquery-file-upload-middleware\r\n- use this repository by\r\n\r\n```json\r\n{\r\n    \"name\": \"your project\",\r\n    \"version\": \"0.1.0\",\r\n    \"private\": true,\r\n    \"dependencies\": {\r\n        \"express\": \"3.3.x\",\r\n        \"jquery-file-upload-middleware\": \"git://github.com/soomtong/jquery-file-upload-middleware.git\",\r\n        \"swig\": \"1.0.x\",\r\n        \"imagemagick\": \"0.1.x\"\r\n    },\r\n    \"devDependencies\": {\r\n        \"nodeunit\":\"*\"\r\n    }\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n\r\n---\r\n\r\n## Readme will update later\r\n\r\njQuery-File-Upload Express.js middleware. Based on the server code of [jQuery-File-Upload](https://github.com/blueimp/jQuery-File-Upload)\r\n\r\nInstallation:\r\n\r\n```\r\n    $ npm install jquery-file-upload-middleware\r\n```\r\n\r\nUsage:\r\n\r\n```javascript\r\n    var express = require(\"express\"),\r\n        upload = require('jquery-file-upload-middleware');\r\n\r\n    var app = express();\r\n\r\n    // configure upload middleware\r\n    upload.configure({\r\n        uploadDir: __dirname + '/public/uploads',\r\n        uploadUrl: '/uploads',\r\n        imageVersions: {\r\n            thumbnail: {\r\n                width: 80,\r\n                height: 80\r\n            }\r\n        }\r\n    });\r\n\r\n    app.configure(function () {\r\n        ...\r\n        app.use('/upload', upload.fileHandler());\r\n        app.use(express.bodyParser());\r\n        ...\r\n    });\r\n\r\n```\r\n\r\nOn the frontend:\r\n\r\n```html\r\n   <input id=\"fileupload\" type=\"file\" name=\"files[]\" data-url=\"/upload\" multiple>\r\n   <script>$('#fileupload').fileupload({ dataType: 'json' })</script>\r\n```\r\n\r\nOverriding global configuration\r\n\r\n```javascript\r\n\r\n    app.use('/upload2', upload.fileHandler({\r\n        uploadDir: __dirname + '/public/uploads2',\r\n        uploadUrl: '/uploads2',\r\n        imageVersions: {\r\n            thumbnail: {\r\n                width: 100,\r\n                height: 100\r\n            }\r\n        }\r\n    }));\r\n\r\n```\r\n\r\nMore sophisticated example - Events\r\n\r\n```javascript\r\n        app.use('/upload', upload.fileHandler());\r\n\r\n        // events\r\n        upload.on('begin', function (fileInfo) { \r\n            // fileInfo structure is the same as returned to browser\r\n            // { \r\n            //     name: '3 (3).jpg',\r\n            //     originalName: '3.jpg',\r\n            //     size: 79262,\r\n            //     type: 'image/jpeg',\r\n            //     delete_type: 'DELETE',\r\n            //     delete_url: 'http://yourhost/upload/3%20(3).jpg',\r\n            //     url: 'http://yourhost/uploads/3%20(3).jpg',\r\n            //     thumbnail_url: 'http://youhost/uploads/thumbnail/3%20(3).jpg' \r\n            // }\r\n        });\r\n        upload.on('abort', function (fileInfo) { ... });\r\n        upload.on('end', function (fileInfo) { ... });\r\n        upload.on('delete', function (fileInfo) { ... });\r\n        upload.on('error', function (e) {\r\n            console.log(e.message);\r\n        });\r\n```\r\n\r\nDynamic upload directory and url, isolating user files:\r\n\r\n```javascript\r\n        upload.configure({\r\n            imageVersions: {\r\n                thumbnail: {\r\n                    width: 80,\r\n                    height: 80\r\n                }\r\n            }\r\n        });\r\n\r\n        app.use('/upload', function (req, res, next) {\r\n            // imageVersions are taken from upload.configure()\r\n            upload.fileHandler({\r\n                uploadDir: function () {\r\n                    return __dirname + '/public/uploads/' + req.sessionID\r\n                },\r\n                uploadUrl: function () {\r\n                    return '/uploads/' + req.sessionID\r\n                }\r\n            })(req, res, next);\r\n        });\r\n```\r\n\r\nMoving uploaded files to different dir:\r\n\r\n```javascript\r\n        app.use('/api', function (req, res, next) {\r\n            req.filemanager = upload.fileManager();\r\n            next();\r\n        });\r\n\r\n        app.use('/api/endpoint', function (req, res, next) {\r\n            // your real /api handler that will actually move the file\r\n            ...\r\n            // req.filemanager.move(filename, path, function (err, result))\r\n            req.filemanager.move('SomeFile.jpg', 'project1', function (err, result) {\r\n                // SomeFile.jpg gets moved from uploadDir/SomeFile.jpg to\r\n                // uploadDir/project1/SomeFile.jpg\r\n                // if path is relative (no leading slash), uploadUrl will\r\n                // be used to generate relevant urls,\r\n                // for absolute paths urls are not generated\r\n                if (!err) {\r\n                    // result structure\r\n                    // {\r\n                    //     filename: 'SomeFile.jpg',\r\n                    //     url: '/uploads/project1/SomeFile.jpg',\r\n                    //     thumbail_url : '/uploads/project1/thumbnail/SomeFile.jpg'\r\n                    // }\r\n                    ...\r\n                } else {\r\n                    console.log(err);\r\n                }\r\n            });\r\n        });\r\n```\r\n\r\nMoving uploaded files out of uploadDir:\r\n\r\n```\r\n        app.use('/api', function (req, res, next) {\r\n            var user = db.find(...);\r\n\r\n            req.filemanager = upload.fileManager({\r\n                targetDir: __dirname + '/public/u/' + user._id,\r\n                targetUrl: '/u/' + user._id,\r\n            });\r\n\r\n            // or\r\n            req.filemanager = upload.fileManager({\r\n                targetDir: function () {\r\n                    return __dirname + '/public/u/' + user._id\r\n                },\r\n                targetUrl: function () {\r\n                    return'/u/' + user._id\r\n                }\r\n            });\r\n            ...\r\n            req.filemanager.move(req.body.filename, 'profile', function (err, result) {\r\n                // file gets moved to __dirname + '/public/u/' + user._id + '/profile'\r\n                if (!err) {\r\n\r\n                }\r\n            });\r\n        });\r\n```\r\n\r\nGetting uploaded files mapped to their fs locations:\r\n\r\n```javascript\r\n        app.use('/list', function (req, res, next) {\r\n            upload.fileManager().getFiles(function (files) {\r\n                //  {\r\n                //      \"00001.MTS\": {\r\n                //          \"path\": \"/home/.../public/uploads/ekE6k4j9PyrGtcg+SA6a5za3/00001.MTS\"\r\n                //      },\r\n                //      \"DSC00030.JPG\": {\r\n                //          \"path\": \"/home/.../public/uploads/ekE6k4j9PyrGtcg+SA6a5za3/DSC00030.JPG\",\r\n                //          \"thumbnail\": \"/home/.../public/uploads/ekE6k4j9PyrGtcg+SA6a5za3/thumbnail/DSC00030.JPG\"\r\n                //      }\r\n                //  }\r\n                res.json(files);\r\n            });\r\n        });\r\n\r\n        // with dynamic upload directories\r\n\r\n        app.use('/list', function (req, res, next) {\r\n            upload.fileManager({\r\n                uploadDir: function () {\r\n                    return __dirname + '/public/uploads/' + req.sessionID\r\n                },\r\n                uploadUrl: function () {\r\n                    return '/uploads/' + req.sessionID\r\n                }\r\n            }).getFiles(function (files) {\r\n                res.json(files);\r\n            });\r\n        });\r\n```\r\n\r\nOther options and their default values:\r\n\r\n```javascript\r\n{\r\n    tmpDir: '/tmp',\r\n    uploadDir: __dirname + '/public/uploads',\r\n    uploadUrl: '/uploads',\r\n    targetDir: uploadDir,\r\n    targetUrl: uploadUrl,\r\n    ssl: false,\r\n    hostname: null, // in case your reverse proxy doesn't set Host header\r\n                    // eg 'google.com'\r\n    maxPostSize: 11000000000, // 11 GB\r\n    minFileSize: 1,\r\n    maxFileSize: 10000000000, // 10 GB\r\n    acceptFileTypes: /.+/i,\r\n    imageTypes: /\\.(gif|jpe?g|png)$/i,\r\n    imageVersions: {\r\n        thumbnail: {\r\n            width: 80,\r\n            height: 80\r\n        }\r\n    },\r\n    imageArgs: ['-auto-orient'],\r\n    accessControl: {\r\n        allowOrigin: '*',\r\n        allowMethods: 'OPTIONS, HEAD, GET, POST, PUT, DELETE'\r\n    }\r\n}\r\n```\r\n\r\n## Contributors\r\n\r\n   * [@soomtong](http://github.com/soomtong)\r\n\r\n## License\r\nCopyright (c) 2012 [Aleksandr Guidrevitch](http://aguidrevitch.blogspot.com/)\r\nReleased under the [MIT license](http://www.opensource.org/licenses/MIT).\r\n",
  "bugs": {
    "url": "https://github.com/aguidrevitch/jquery-file-upload-middleware/issues"
  },
  "dist": {
    "shasum": "a4c9ad58728513cdb348be41191d43d0e365805e"
  },
  "_resolved": "git://github.com/soomtong/jquery-file-upload-middleware.git#0900480389fd004cac7e4fc11547b5b3802a89df",
  "_from": "jquery-file-upload-middleware@git://github.com/soomtong/jquery-file-upload-middleware.git"
}
