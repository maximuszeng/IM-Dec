<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.eim</groupId>
		<artifactId>parent</artifactId>
		<version>1.0.0</version>
		<relativePath>../parent</relativePath>
	</parent>

	<artifactId>robotserver</artifactId>
	<name>robotserver</name>
	<url>http://maven.apache.org</url>
	<packaging>war</packaging>

	<properties>
		<slf4j.version>1.7.5</slf4j.version>
		<solr.version>4.5.1</solr.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<build.profile.id>dev</build.profile.id>
			</properties>
		</profile>
	</profiles>
	<build>
		<finalName>solr</finalName>
		<filters>
			<filter>${project.basedir}/profiles/${build.profile.id}/config.properties</filter>
		</filters>
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<plugins>
		<!-- Configuring the Properties Maven Plugin
			 Because we want that all property values used in our POM 
		file are read from an external properties file, we have to use
		a plugin called the Properties Maven plugin. We can configure 
		this plugin by following these steps:

    1. Ensure that the properties are read from the profile specific configuration file.
    2. Create an execution that runs the read-project-properties goal of the Properties 
    Maven plugin in the initialize phase of the Maven default lifecycle.
    3. Create an execution that runs the read-project properties goal of the Properties
    Maven plugin in the pre-clean phase of the Maven clean lifecycle. -->
    
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0-alpha-2</version>
				<configuration>
					<files>
						<!-- Properties are read from profile specific property file -->
						<file>${project.basedir}/profiles/${build.profile.id}/config.properties</file>
					</files>
				</configuration>
				<executions>
					<!-- Load properties for the default lifecycle -->
					<execution>
						<id>default-lifecycle-properties</id>
						<phase>initialize</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
					</execution>
					<!-- Load properties for the clean lifecycle -->
					<execution>
						<id>clean-lifecycle-properties</id>
						<phase>pre-clean</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.goldin</groupId>
				<artifactId>copy-maven-plugin</artifactId>
				<version>0.2.5</version>
				<executions>
					<!-- Copy Solr configuration file when compile phase is executed -->
					<execution>
						<id>copy-solr-config</id>
						<phase>compile</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<resources>
								<!-- Copies solr.xml to correct directory and applies properties 
									filtering to it. -->
								<resource>
									<directory>${project.basedir}/src/main/resources</directory>
									<filtering>true</filtering>
									<targetPath>${solr.solr.home}</targetPath>
									<includes>
										<include>solr.xml</include>
									</includes>
								</resource>
								<!-- Copies configuration files -->
								<resource>
									<directory>${project.basedir}/src/main/config</directory>
									<targetPath>${solr.solr.home}/${solr.default.core.directory}/conf</targetPath>
									<excludes>
										<exclude>lang</exclude>
										<exclude>velocity</exclude>
										<exclude>xslt</exclude>
									</excludes>
								</resource>
								<!-- Copies language specific configuration files -->
								<resource>
									<directory>${project.basedir}/src/main/config/lang</directory>
									<targetPath>${solr.solr.home}/${solr.default.core.directory}/conf/lang</targetPath>
								</resource>
								<!-- Copy Velocity macros and other files -->
								<resource>
									<directory>${project.basedir}/src/main/config/velocity</directory>
									<targetPath>${solr.solr.home}/${solr.default.core.directory}/conf/velocity</targetPath>
								</resource>
								<!-- Copy XSL style sheets -->
								<resource>
									<directory>${project.basedir}/src/main/config/xslt</directory>
									<targetPath>${solr.solr.home}/${solr.default.core.directory}/conf/xslt</targetPath>
								</resource>
							</resources>
						</configuration>
					</execution>
					<!-- Delete Solr configuration files clean clean phase is executed -->
					<execution>
						<id>clean-solr</id>
						<phase>clean</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<failIfNotFound>false</failIfNotFound>
							<resources>
								<!-- Clean the overlays directory from the project root directory -->
								<resource>
									<clean>true</clean>
									<cleanEmptyDirectories>true</cleanEmptyDirectories>
									<directory>${project.basedir}/overlays</directory>
									<includes>
										<include>**/**</include>
									</includes>
								</resource>
								<!-- Remove the solr.xml file -->
								<resource>
									<clean>true</clean>
									<directory>${solr.solr.home}</directory>
									<includes>
										<include>solr.xml</include>
									</includes>
								</resource>
								<!-- Remove the conf directory -->
								<resource>
									<clean>true</clean>
									<cleanEmptyDirectories>true</cleanEmptyDirectories>
									<directory>${solr.solr.home}/${solr.default.core.directory}</directory>
									<includes>
										<include>conf</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.1.8.v20121106</version>
				<configuration>
					<stopPort>9966</stopPort>
					<stopKey>stop</stopKey>
					<connectors>
						<!-- Listen to port 8983 -->
						<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
							<port>8983</port>
							<maxIdleTime>60000</maxIdleTime>
						</connector>
					</connectors>
					<!-- Read system properties from profile specific configuration file -->
					<systemPropertiesFile>${project.basedir}/profiles/${build.profile.id}/config.properties</systemPropertiesFile>
					<webApp>
						<contextPath>/solr</contextPath>
					</webApp>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>org.apache.solr</groupId>
			<artifactId>solr</artifactId>
			<version>${solr.version}</version>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
	</dependencies>
</project>
